name: Summarize Changes and Detect Issues

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/dependabot/**'

permissions:
  contents: read
  issues: write

jobs:
  analyze_changes:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 2

    - name: Get commit info
      id: commit_info
      run: |
        AUTHOR=$(git log -1 --pretty=format:'%an')
        COMMIT_MSG=$(git log -1 --pretty=format:'%s')
        echo "author=$AUTHOR" >> $GITHUB_OUTPUT
        echo "commit_msg=$COMMIT_MSG" >> $GITHUB_OUTPUT

    - name: Summarize code changes
      id: summarize_changes
      run: |
        echo "### Files Changed:" > changes_summary.txt
        git diff --name-status HEAD^ HEAD >> changes_summary.txt
        
        STATS=$(git diff --shortstat HEAD^ HEAD)
        echo -e "\n### Change Statistics:" >> changes_summary.txt
        echo "$STATS" >> changes_summary.txt
        
        git diff HEAD^ HEAD > changes.diff

    - name: Create issue with summary
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          
          // Read summary
          let changesSummary = 'No summary available';
          if (fs.existsSync('changes_summary.txt')) {
            changesSummary = fs.readFileSync('changes_summary.txt', 'utf8');
          }
          
          // Read diff
          let changes = 'No diff available';
          if (fs.existsSync('changes.diff')) {
            const diffContent = fs.readFileSync('changes.diff', 'utf8');
            changes = diffContent.length > 5000
              ? diffContent.substring(0, 5000) + '\n... (truncated)'
              : diffContent;
          }
          
          // Create issue
          const issue = await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `Code Review for commit ${context.sha.substring(0, 7)}`,
            body: `## Code Review for Recent Changes\n\n**Commit**: ${context.sha}\n**Author**: ${process.env.COMMIT_AUTHOR || 'Unknown'}\n**Message**: ${process.env.COMMIT_MSG || 'No commit message'}\n\n### Summary of Changes\n\n${changesSummary}\n\n### Code Diff\n\n\`\`\`diff\n${changes}\n\`\`\`\n\nThis issue was automatically generated by the GitHub Actions workflow.`
          });
          
          console.log(`Issue created: ${issue.data.html_url}`);
        env:
          COMMIT_AUTHOR: ${{ steps.commit_info.outputs.author }}
          COMMIT_MSG: ${{ steps.commit_info.outputs.commit_msg }}
