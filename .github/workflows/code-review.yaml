
name: Summarize Changes and Detect Issues

on:
  push:
    branches: [main]
    paths-ignore:
      - '**/dependabot/**'
  pull_request:
    branches: [main]
    paths-ignore:
      - '**/dependabot/**'
    types: [opened, reopened, synchronize]

permissions:
  contents: read
  issues: write

jobs:
  analyze_changes:
    if: ${{ (github.event_name == 'push' && github.actor != 'dependabot[bot]') || (github.event_name == 'pull_request' && !startsWith(github.head_ref, 'dependabot/')) }}
    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get commit info
        id: commit_info
        run: |
          AUTHOR=$(git log -1 --pretty=format:'%an')
          COMMIT_MSG=$(git log -1 --pretty=format:'%s')
          echo "author=$AUTHOR" >> $GITHUB_OUTPUT
          echo "commit_msg=$COMMIT_MSG" >> $GITHUB_OUTPUT

      - name: Summarize code changes
        id: summarize_changes
        run: |
          BEFORE=${{ github.event.before || '0000000000000000000000000000000000000000' }}
          AFTER=${{ github.event.after }}

          if [ "$BEFORE" = "0000000000000000000000000000000000000000" ]; then
            git diff-tree --name-status -r $AFTER > changes_summary.txt
            git diff-tree -p $AFTER > changes.diff
          else
            git diff $BEFORE $AFTER --name-status > changes_summary.txt
            git diff $BEFORE $AFTER > changes.diff
          fi

          # Generate detailed highlights of added, removed, or modified lines
          npx diff2html --summary --input-file changes.diff --output-format line-by-line > detailed_summary.html || echo "diff2html failed"
      
      - name: Upload full diff as artifact
        uses: actions/upload-artifact@v4
        with:
          name: full-diff
          path: changes.diff

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi
          npm install @octokit/rest axios

      - name: Generate OpenAI code analysis
        id: openai_analysis
        run: |
          if [ -z "$OPENAI_API_KEY" ]; then
            echo "OPENAI_API_KEY is not set. Skipping OpenAI analysis."
          else
            echo "Generating AI code analysis..."
            node ./.github/workflows/scripts/analyze-with-openai.js
          fi
        env:
          CHANGES_DIFF: ${{ github.workspace }}/changes.diff

      - name: Analyze changes for suggestions
        run: |
          CHANGED_FILES=$(git diff --name-only $BEFORE $AFTER | grep -E "\.(js|ts|jsx|tsx)$" || true)
          if [ -z "$CHANGED_FILES" ]; then
            echo "No JS/TS files changed."
          else
            echo "Analyzing the following files for suggestions:"
            echo "$CHANGED_FILES"
            npx eslint $CHANGED_FILES --format json > eslint_report.json || echo "ESLint failed"
            cat eslint_report.json | jq '.[] | {filePath, messages}' > suggestions.json || echo "JQ failed"
          fi

      - name: Lint JavaScript/TypeScript files
        id: linting
        run: |
          CHANGED_FILES=$(git diff --name-only $BEFORE $AFTER | grep -E "\.(js|ts|jsx|tsx)$" || true)
          if [ -z "$CHANGED_FILES" ]; then
            echo "No JS/TS files changed."
          else
            echo "Linting the following files:"
            echo "$CHANGED_FILES"
            npx eslint $CHANGED_FILES --format json > eslint_issues.json || echo "ESLint failed"
            echo "Linting results saved to eslint_issues.json"
          fi

      - name: Create issue with summary
        uses: actions/github-script@v6
        env:
          AUTHOR: ${{ steps.commit_info.outputs.author || 'Unknown Author' }}
          COMMIT_MSG: ${{ steps.commit_info.outputs.commit_msg || 'No commit message available' }}
          OPENAI_ANALYSIS: ${{ steps.openai_analysis.outputs.analysis || 'No AI analysis available' }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');

            let summary = 'No summary available';
            if (fs.existsSync('changes_summary.txt')) {
              summary = fs.readFileSync('changes_summary.txt', 'utf8');
            }

            let detailedHighlights = 'No highlights available';
            if (fs.existsSync('detailed_summary.html')) {
              detailedHighlights = fs.readFileSync('detailed_summary.html', 'utf8');
            }

            let eslintIssues = 'No linting issues found';
            if (fs.existsSync('eslint_issues.json')) {
              eslintIssues = JSON.parse(fs.readFileSync('eslint_issues.json', 'utf8'));
            }
            
            let aiAnalysis = process.env.OPENAI_ANALYSIS || 'AI analysis not available';
            
            try {
              // Try to read from file if available
              if (fs.existsSync('openai_analysis.txt')) {
                aiAnalysis = fs.readFileSync('openai_analysis.txt', 'utf8');
              }
            } catch (err) {
              console.error('Error reading AI analysis file:', err);
            }

            const issueBody = `
              ## Code Review for Recent Changes

              **Commit**: ${context.sha}  
              **Author**: ${process.env.AUTHOR}  
              **Message**: ${process.env.COMMIT_MSG}  

              ### AI Code Analysis
              ${aiAnalysis}

              ### Summary of Changes
              \`\`\`
              ${summary}
              \`\`\`

              ### Detailed Highlights
              ${detailedHighlights}

              ### Linting Issues
              ${eslintIssues}

              This issue was automatically generated by the workflow.
            `;

            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Code Review for commit ${context.sha.substring(0,7)}`,
              body: issueBody,
              labels: ['automated-review']
            });
