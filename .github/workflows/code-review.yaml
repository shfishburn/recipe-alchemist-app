name: Summarize Changes and Detect Issues

on:
  push:
    branches:
      - main # Adjust to your target branch
    paths-ignore:
      - '**/dependabot/**' # Ignore Dependabot paths instead

# Explicitly define permissions
permissions:
  contents: read
  issues: write

jobs:
  analyze_changes:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 2  # Need at least 2 commits for diff

    - name: Get commit info
      id: commit_info
      run: |
        AUTHOR=$(git log -1 --pretty=format:'%an')
        COMMIT_MSG=$(git log -1 --pretty=format:'%s')
        echo "author=$AUTHOR" >> $GITHUB_OUTPUT
        echo "commit_msg=$COMMIT_MSG" >> $GITHUB_OUTPUT
        echo "Commit Author: $AUTHOR"
        echo "Commit Message: $COMMIT_MSG"

    - name: Summarize code changes
      id: summarize_changes
      run: |
        git diff HEAD^ HEAD > changes.diff
        echo "Diff file created with size: $(du -h changes.diff | cut -f1)"
        
        # Create a summary of file changes
        echo "### Files Changed:" > changes_summary.txt
        git diff --name-status HEAD^ HEAD >> changes_summary.txt
        
        # Count lines added/removed
        STATS=$(git diff --shortstat HEAD^ HEAD)
        echo -e "\n### Change Statistics:" >> changes_summary.txt
        echo "$STATS" >> changes_summary.txt

    # Perform static analysis using ESLint
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install Dependencies
      run: npm ci

    - name: Run ESLint on changed files
      run: |
        # Only analyze changed JavaScript or TypeScript files
        CHANGED_FILES=$(git diff --name-only HEAD^ HEAD | grep -E "\.(ts|tsx|js|jsx)$" || true)
        if [ -z "$CHANGED_FILES" ]; then
          echo "No JavaScript or TypeScript files to lint."
          exit 0
        fi

        echo "Running ESLint on changed files:"
        echo "$CHANGED_FILES"
        npx eslint $CHANGED_FILES --max-warnings 0 || exit 1

    - name: Create issue with summary
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          try {
            const fs = require('fs');

            // Read files generated by the workflow
            let changesSummary = fs.existsSync('changes_summary.txt')
              ? fs.readFileSync('changes_summary.txt', 'utf8')
              : 'No summary available';
            
            let changes = fs.existsSync('changes.diff')
              ? fs.readFileSync('changes.diff', 'utf8')
              : 'No diff available';

            // Create an issue with the summarized changes and linting results
            const issueResponse = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Code Review for commit ${context.sha.substring(0, 7)}`,
              body: `
              ## Code Review for Recent Changes
              
              **Commit**: ${context.sha}
              **Author**: ${process.env.COMMIT_AUTHOR || 'Unknown'}
              **Message**: ${process.env.COMMIT_MSG || 'No commit message'}
              
              ### Summary of Changes
              
              ${changesSummary || 'No summary available'}
              
              ### Code Diff
              
              \`\`\`diff
              ${changes}
              \`\`\`
              
              This issue was automatically generated by the GitHub Actions workflow.
              `,
              labels: ['automated-review', 'syntax-check'],
            });

            console.log(`Issue created successfully: ${issueResponse.data.html_url}`);
          } catch (error) {
            console.error(`Failed to create issue: ${error.message}`);
            core.setFailed(`Issue creation failed: ${error.message}`);
          }
        env:
          COMMIT_AUTHOR: ${{ steps.commit_info.outputs.author }}
          COMMIT_MSG: ${{ steps.commit_info.outputs.commit_msg }}